{"version":3,"sources":["data/restaurants.js","store/actions/index.js","services/index.js","store/reducers/index.js","store/initialState.js","store/configureStore.js","components/Map.jsx","data/apiKeys.js","components/MapContainer.js","components/MainLayout.jsx","store/selectors/index.js","components/MainLayoutContainer.js","App.jsx","index.js"],"names":["restaurants","name","latitude","longitude","stars","review","FETCHING_RESTAURANTS","FETCHING_RESTAURANTS_SUCCESS","FETCHING_RESTAURANTS_FAILURE","fetchRestaurants","dispatch","type","Promise","resolve","then","payload","catch","error","reducer","state","action","actions","initialState","logger","createLogger","composeEnhanced","window","__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__","compose","configureStore","createStore","applyMiddleware","thunkMiddleware","Map","props","setupMap","map","view","setState","loadModules","Editor","webMercatorUtils","FeatureLayer","restaurantGraphics","createGraphics","restaurantLayer","createLayer","add","editor","ui","restaurant","point","geometry","geographicToWebMercator","attributes","rating","source","fields","alias","objectIdField","geometryType","renderer","symbol","url","process","width","height","popupTemplate","title","content","fieldInfos","fieldName","label","visible","zoom","this","center","esriConfig","MapView","apiKey","basemap","container","when","className","id","React","Component","defaultProps","restaurantList","MapContainer","connect","ownProps","MainLayout","length","selectRestaurants","MainLayoutContainer","store","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3889acdf.chunk.js","sourcesContent":["export const restaurants = [\n  {\n    name: \"Posto\",\n    latitude: 42.393130393416975,\n    longitude: -71.12023817216877,\n    stars: 4.5,\n    review: \"Great Pizza and cocktails\"\n  },\n  {\n    name: \"Life Alive Organic Cafe\",\n    latitude: 42.36710399603149,\n    longitude: -71.10370172249357,\n    stars: 5,\n    review: \"Incredible vegetarian salads & bowls. Favorite lunch spot\"\n  },\n  {\n    name: \"Similans\",\n    latitude: 42.36635440233365,\n    longitude: -71.0782126899619,\n    stars: 5,\n    review: \"Great Thai food- try the green curry\"\n  },\n  {\n    name: \"Pho Basil\",\n    latitude: 42.34635787410512,\n    longitude: -71.0863610565746,\n    stars: 4.5,\n    review: \"Not fancy, but the best Pho. College Favorite\"\n  },\n  {\n    name: \"Squealing Pig\",\n    latitude: 42.335031338903555,\n    longitude: -71.10164881620743,\n    stars: 3.5,\n    review: \"Favorite college bar. Good tap list, food is ok\"\n  },\n  {\n    name: \"James Hook & Co.\",\n    latitude: 42.35497180351533,\n    longitude: -71.05060155135841,\n    stars: 4,\n    review: \"Tiny shack, best lobster rolls- outdoor eating but good prices\"\n  }\n];\n","import { getRestaurants } from '../../services/index.js';\n\n// Action Types\nexport const FETCHING_RESTAURANTS = 'FETCHING_RESTAURANTS';\nexport const FETCHING_RESTAURANTS_SUCCESS = 'FETCHING_RESTAURANTS_SUCCESS';\nexport const FETCHING_RESTAURANTS_FAILURE = 'FETCHING_RESTAURANTS_FAILURE';\n\n\n// Action creators\n\n/**\n * An action to fetch the restaurants\n * @returns {Promise} The promise to fetch restaurant data\n */\nexport function fetchRestaurants() {\n  return (dispatch) => {\n    dispatch({ type: FETCHING_RESTAURANTS });\n\n    return getRestaurants()\n      .then((restaurants) => {\n        dispatch({ type: FETCHING_RESTAURANTS_SUCCESS, payload: restaurants });\n      })\n      .catch((error) => {\n        dispatch({ type: FETCHING_RESTAURANTS_FAILURE, payload: error });\n      });\n  };\n}\n","import { restaurants } from '../data/restaurants';\n\n/**\n * Get the restaurant data\n * @returns {Promise} Promise to return the restaurants\n */\nexport function getRestaurants() {\n  // TODO TEMPORARILY RETURNS LOCAL STORED DATA UNTIL BACKEND IS SETUP\n  return Promise.resolve(restaurants);\n}\n","import * as actions from '../actions/index.js';\n\nexport default function reducer(state, action) {\n  const { payload, type } = action;\n  switch (type) {\n    case actions.FETCHING_RESTAURANTS:\n     return { ...state };\n    case actions.FETCHING_RESTAURANTS_SUCCESS:\n      return {\n        ...state,\n        restaurants: payload\n      };\n    case actions.FETCHING_RESTAURANTS_FAILURE:\n      return { ...state };\n     default:\n      return { ...state};\n  }\n}\n","export const initialState = {\n    restaurants: []\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './reducers';\nimport { initialState } from './initialState.js';\n\nconst logger = createLogger();\nconst composeEnhanced = window.__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__ || compose;\n\nfunction configureStore() {\n  return createStore(\n    reducer,\n    initialState,\n    composeEnhanced(applyMiddleware(thunkMiddleware, logger))\n  );\n}\n\nexport default configureStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { loadModules } from 'esri-loader';\nimport { arcgisApiKey } from '../data/apiKeys.js';\nimport './Map.css';\n\n/**\n * Map Component that displays restaurants geographically\n */\nexport default class Map extends React.Component {\n  static propTypes = {\n    zoom: PropTypes.number,\n    center: PropTypes.shape({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number\n    }),\n    restaurants: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      stars: PropTypes.number,\n      review: PropTypes.string\n    }))\n  };\n  static defaultProps = {\n    zoom: 12,\n    center: { latitude: 42.35879, longitude: -71.05610 }, // Boston\n    restaurantList: []\n  };\n\n  /**\n   * Construct this Map component\n   * @param {any} props the Component's props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      view: null,\n      restaurantLayer: null,\n      zoom: props.zoom\n    }\n  }\n\n  /**\n   * Upon mounting, instantiate the Esri Arcgis Map\n   * For more documentation: https://developers.arcgis.com/javascript/latest/api-reference/\n   * @returns {void}\n   */\n  componentDidMount() {\n    const { zoom, center } = this.props;\n    loadModules(['esri/config', 'esri/Map', 'esri/views/MapView'], {})\n      .then(([esriConfig, Map, MapView]) => {\n        esriConfig.apiKey = arcgisApiKey;\n        const map = new Map({\n          basemap: 'arcgis-light-gray'\n        });\n        const view = new MapView({\n          container: 'restaurantMap',\n          map,\n          zoom,\n          center: [center.longitude, center.latitude]\n        });\n        view.when(() => {\n          this.setupMap(map, view);\n        });\n      });\n  }\n\n  /**\n   * Once the Basemap has been created, finish setting up the map by\n   * loading features and adding widgets\n   * @returns {void}\n   */\n  setupMap = (map, view) => {\n    this.setState({ map, view });\n    loadModules(['esri/widgets/Editor', 'esri/geometry/support/webMercatorUtils', 'esri/layers/FeatureLayer'], {})\n      .then(([Editor, webMercatorUtils, FeatureLayer]) => {\n\n        const restaurantGraphics = this.createGraphics(webMercatorUtils);\n\n        const restaurantLayer = this.createLayer(restaurantGraphics, FeatureLayer);\n\n        this.state.map.add(restaurantLayer);\n\n        // Create the Editor\n        const editor = new Editor({ view });\n        // Add widget to top-right of the view\n        this.state.view.ui.add(editor, \"top-right\");\n      });\n  }\n\n  /**\n  * Create a list of Esri Graphics, one per restaurant\n  * @param {any} webMercatorUtils an ESRI object for formatting geometries\n  * @returns {array} the list of restaurant Graphics\n  */\n  createGraphics = (webMercatorUtils) => {\n    const { restaurants } = this.props;\n\n    return restaurants.map((restaurant) => {\n      const point = {\n        type: 'point',\n        latitude: restaurant.latitude,\n        longitude: restaurant.longitude\n      };\n      const geometry = webMercatorUtils.geographicToWebMercator(point);\n      return {\n        geometry,\n        attributes: {\n          name: restaurant.name,\n          rating: restaurant.stars,\n          review: restaurant.review\n        }\n      };\n    });\n  }\n\n  /**\n  * Create a Feature Layer containing the restaurant Graphics\n  * @param {array} restaurantGraphics the list of restaurant Graphics\n  * @param {any} FeatureLayer the Feature Layer Esri object\n  * @returns {any} the feature layer\n  */\n  createLayer = (restaurantGraphics, FeatureLayer) => {\n    return new FeatureLayer({\n      source: restaurantGraphics,\n      fields: [{\n        name: \"ObjectID\",\n        alias: \"ObjectID\",\n        type: \"oid\"\n      }, {\n        name: \"name\",\n        alias: \"Name\",\n        type: \"string\"\n      },\n      {\n        name: \"rating\",\n        alias: \"Rating\",\n        type: \"double\"\n      },\n      {\n        name: \"review\",\n        alias: \"Review\",\n        type: \"string\"\n      }],\n      objectIdField: \"ObjectID\",\n      geometryType: \"point\",\n      renderer: {\n        type: \"simple\",\n        symbol: {\n          type: 'picture-marker',\n          url: `${process.env.PUBLIC_URL}/assets/restaurant-icon.svg`,\n          width: '25px',\n          height:'25px'\n        }\n      },\n      popupTemplate: {\n        title: 'Restaurant',\n        content: [{\n          type: 'fields',\n          fieldInfos: [{\n            fieldName: 'name',\n            label: 'Name',\n            visible: true\n          }, {\n            fieldName: 'rating',\n            label: 'Rating',\n            visible: true\n          }, {\n            fieldName: 'review',\n            label: 'Review',\n            visible: true\n          }]\n        }]\n      }\n    });\n  }\n\n\n  /**\n   * Render the Map Component\n   * @returns {HTML}\n   */\n  render() {\n    return(\n      <div className='restaurant-map-div' id='restaurantMap' />\n    );\n  }\n}\n","export const arcgisApiKey = 'AAPKac9b362f225f4f378683a4a3ac766f69hi9tHlW8g37flkaxGDNZ0mguVNfC67EVRIw4XN0aCiQsni_vQNodhgNZ7H9xVbYL'\n","import { connect } from 'react-redux';\nimport Map from './Map.jsx';\n\nexport const mapStateToProps = (state, ownProps) => {\n  return {\n    restaurants: ownProps.restaurants\n  };\n};\nexport const mapDispatchToProps = null;\n\nconst MapContainer = connect(mapStateToProps, mapDispatchToProps)(Map);\n\nexport default MapContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapContainer from './MapContainer.js';\n\n/**\n * Main Layout Component that holds the contents of the site\n */\nclass MainLayout extends React.Component {\n  static propTypes = {\n    restaurants: PropTypes.arrayOf(PropTypes.object),\n    fetchRestaurants: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    restaurants: []\n  };\n\n  /**\n   * Upon mounting, if there are no restaurants loaded, fetch them\n   * @returns {void}\n   */\n  componentDidMount() {\n    const { fetchRestaurants, restaurants} = this.props;\n    if (restaurants.length === 0) {\n      fetchRestaurants();\n    }\n  }\n\n  /**\n   * Render the main layout of the site\n   * @returns {HTML}\n   */\n  render() {\n    const { restaurants } = this.props;\n    return(\n      <div>\n        <h1> Restaurants </h1>\n        <MapContainer\n          restaurants={restaurants}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MainLayout;\n","\n/**\n * Selector to retrieve restaurants from state\n * @returns{array} list of restaurants\n */\nexport function selectRestaurants(state) {\n  return state.restaurants;\n}\n","import { connect } from 'react-redux';\nimport MainLayout from './MainLayout.jsx';\nimport { selectRestaurants } from '../store/selectors/index';\nimport { fetchRestaurants } from '../store/actions/index';\n\nexport const mapStateToProps = (state) => {\n  return {\n    restaurants: selectRestaurants(state)\n  }\n};\nexport const mapDispatchToProps = dispatch => ({\n  fetchRestaurants: () => {\n    dispatch(fetchRestaurants());\n  }\n});\n\nconst MainLayoutContainer = connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n\nexport default MainLayoutContainer;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport MainLayoutContainer from './components/MainLayoutContainer.js';\n\nconst store = configureStore();\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <MainLayoutContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}