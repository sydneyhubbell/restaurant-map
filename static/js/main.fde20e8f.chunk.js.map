{"version":3,"sources":["data/restaurants.js","store/actions/index.js","services/index.js","store/reducers/index.js","store/initialState.js","store/configureStore.js","components/Map.jsx","data/apiKeys.js","components/MapContainer.js","components/MainLayout.jsx","store/selectors/index.js","components/MainLayoutContainer.js","App.jsx","index.js"],"names":["restaurants","name","latitude","longitude","stars","category","review","FETCHING_RESTAURANTS","FETCHING_RESTAURANTS_SUCCESS","FETCHING_RESTAURANTS_FAILURE","fetchRestaurants","dispatch","type","Promise","resolve","then","payload","catch","error","reducer","state","action","actions","initialState","logger","createLogger","composeEnhanced","window","__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__","compose","configureStore","createStore","applyMiddleware","thunkMiddleware","Map","props","setupMap","map","view","loadModules","Editor","webMercatorUtils","FeatureLayer","AttachmentsContent","CustomContent","setState","restaurantGraphics","createGraphics","_restaurantLayer","createLayer","add","_editor","container","document","createElement","layerInfos","layer","fieldConfig","label","editable","configureEditor","restaurant","point","geometry","geographicToWebMercator","attributes","rating","_template","title","outFields","content","generateTemplateContent","fieldInfos","fieldName","id","className","source","fields","alias","popupTemplate","objectIdField","geometryType","editingEnabled","renderer","symbol","url","process","width","height","feature","attachmentsElement","displayType","creator","event","graphic","_this","popup","on","editThis","watch","viewModel","close","_features","features","ui","remove","forEach","cancelWorkflow","activeWorkFlow","visible","startUpdateWorkflowAtFeatureEdit","selectedFeature","spinnerEnabled","setTimeout","arrComp","domNode","getElementsByClassName","length","setAttribute","addEventListener","evt","preventDefault","open","this","zoom","center","esriConfig","MapView","apiKey","basemap","when","React","Component","defaultProps","restaurantList","MapContainer","connect","ownProps","MainLayout","selectRestaurants","MainLayoutContainer","store","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fde20e8f.chunk.js","sourcesContent":["export const restaurants = [\n  {\n    name: \"Posto\",\n    latitude: 42.393130393416975,\n    longitude: -71.12023817216877,\n    stars: 4.5,\n    category: \"Fancier\",\n    review: \"Great Pizza and cocktails\"\n  },\n  {\n    name: \"SRV\",\n    latitude: 42.341167652453514,\n    longitude: -71.08160220247323,\n    stars: 5,\n    category: \"Fancier\",\n    review: \"Incredible modern Italian, favorite restaurant in Boston\"\n  },\n  {\n    name: \"Life Alive Organic Cafe\",\n    latitude: 42.36710399603149,\n    longitude: -71.10370172249357,\n    stars: 5,\n    category: \"Casual\",\n    review: \"Incredible vegetarian salads & bowls. Favorite lunch spot\"\n  },\n  {\n    name: \"Similans\",\n    latitude: 42.36635440233365,\n    longitude: -71.0782126899619,\n    stars: 4.7,\n    category: \"Fancier\",\n    review: \"Great Thai food- try the green curry\"\n  },\n  {\n    name: \"Pho Basil\",\n    latitude: 42.34635787410512,\n    longitude: -71.0863610565746,\n    stars: 4.5,\n    category: \"Casual\",\n    review: \"Not fancy, but the best Pho. College Favorite\"\n  },\n  {\n    name: \"Squealing Pig\",\n    latitude: 42.335031338903555,\n    longitude: -71.10164881620743,\n    stars: 3.5,\n    category: \"Bar\",\n    review: \"Favorite college bar. Good tap list, food is ok\"\n  },\n  {\n    name: \"James Hook & Co.\",\n    latitude: 42.35497180351533,\n    longitude: -71.05060155135841,\n    stars: 4,\n    category: \"Fast Food\",\n    review: \"Tiny shack, best lobster rolls- outdoor eating but good prices\"\n  },\n  {\n    name: \"Georgetown Cupcake\",\n    latitude: 42.35207492173606,\n    longitude: -71.07419330674165,\n    stars: 4.1,\n    category: \"Bakery\",\n    review: \"Insane cupcakes- expensive but free flavor of the day if you get there early enough\"\n  },\n  {\n    name: \"Thinking Cup\",\n    latitude: 42.354339815839346,\n    longitude: -71.06323525356133,\n    stars: 4.2,\n    category: \"Coffee Shop\",\n    review: \"Good coffee and great sandwiches. Always busy inside, so get it to go and eat in The Common\"\n  }\n\n\n];\n","import { getRestaurants } from '../../services/index.js';\n\n// Action Types\nexport const FETCHING_RESTAURANTS = 'FETCHING_RESTAURANTS';\nexport const FETCHING_RESTAURANTS_SUCCESS = 'FETCHING_RESTAURANTS_SUCCESS';\nexport const FETCHING_RESTAURANTS_FAILURE = 'FETCHING_RESTAURANTS_FAILURE';\n\n\n// Action creators\n\n/**\n * An action to fetch the restaurants\n * @returns {Promise} The promise to fetch restaurant data\n */\nexport function fetchRestaurants() {\n  return (dispatch) => {\n    dispatch({ type: FETCHING_RESTAURANTS });\n\n    return getRestaurants()\n      .then((restaurants) => {\n        dispatch({ type: FETCHING_RESTAURANTS_SUCCESS, payload: restaurants });\n      })\n      .catch((error) => {\n        dispatch({ type: FETCHING_RESTAURANTS_FAILURE, payload: error });\n      });\n  };\n}\n","import { restaurants } from '../data/restaurants';\n\n/**\n * Get the restaurant data\n * @returns {Promise} Promise to return the restaurants\n */\nexport function getRestaurants() {\n  // TODO TEMPORARILY RETURNS LOCAL STORED DATA UNTIL BACKEND IS SETUP\n  return Promise.resolve(restaurants);\n}\n","import * as actions from '../actions/index.js';\n\nexport default function reducer(state, action) {\n  const { payload, type } = action;\n  switch (type) {\n    case actions.FETCHING_RESTAURANTS:\n     return { ...state };\n    case actions.FETCHING_RESTAURANTS_SUCCESS:\n      return {\n        ...state,\n        restaurants: payload\n      };\n    case actions.FETCHING_RESTAURANTS_FAILURE:\n      return { ...state };\n     default:\n      return { ...state};\n  }\n}\n","export const initialState = {\n    restaurants: []\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './reducers';\nimport { initialState } from './initialState.js';\n\nconst logger = createLogger();\nconst composeEnhanced = window.__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__ || compose;\n\nfunction configureStore() {\n  return createStore(\n    reducer,\n    initialState,\n    composeEnhanced(applyMiddleware(thunkMiddleware, logger))\n  );\n}\n\nexport default configureStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { loadModules } from 'esri-loader';\nimport { arcgisApiKey } from '../data/apiKeys.js';\nimport './Map.css';\n\n/**\n * Map Component that displays restaurants geographically\n */\nexport default class Map extends React.Component {\n  static propTypes = {\n    zoom: PropTypes.number,\n    center: PropTypes.shape({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number\n    }),\n    restaurants: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      stars: PropTypes.number,\n      review: PropTypes.string\n    }))\n  };\n  static defaultProps = {\n    zoom: 12,\n    center: { latitude: 42.35879, longitude: -71.05610 }, // Boston\n    restaurantList: []\n  };\n\n  /**\n   * Construct this Map component\n   * @param {any} props the Component's props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      view: null,\n      webMercatorUtils: null,\n      FeatureLayer: null,\n      AttachmentsContent: null,\n      CustomContent: null\n    }\n  }\n\n  /**\n   * Upon mounting, instantiate the Esri Arcgis Map\n   * For more documentation: https://developers.arcgis.com/javascript/latest/api-reference/\n   * @returns {void}\n   */\n  componentDidMount() {\n    const { zoom, center } = this.props;\n    loadModules(['esri/config', 'esri/Map', 'esri/views/MapView'], {})\n      .then(([esriConfig, Map, MapView]) => {\n        esriConfig.apiKey = arcgisApiKey;\n        const map = new Map({\n          basemap: 'arcgis-light-gray'\n        });\n        const view = new MapView({\n          container: 'restaurantMap',\n          map,\n          zoom,\n          center: [center.longitude, center.latitude]\n        });\n        view.when(() => {\n          this.setupMap(map, view);\n        });\n      });\n  }\n\n  /**\n   * Once the Basemap has been created, finish setting up the map by\n   * loading features and adding widgets\n   * @returns {void}\n   */\n  setupMap = (map, view) => {\n    // Load the Esri Modules once, and store them in the state for future use\n    loadModules(['esri/widgets/Editor', 'esri/geometry/support/webMercatorUtils',\n    'esri/layers/FeatureLayer', 'esri/popup/content/AttachmentsContent',\n    'esri/popup/content/CustomContent'], {})\n      .then(([Editor, webMercatorUtils, FeatureLayer, AttachmentsContent, CustomContent]) => {\n        this.setState({\n          map,\n          view,\n          webMercatorUtils,\n          FeatureLayer,\n          AttachmentsContent,\n          CustomContent\n        }, () => {\n          // create the Graphics\n          const restaurantGraphics = this.createGraphics();\n          // Add those graphics to a new Feature layer\n          this._restaurantLayer = this.createLayer(restaurantGraphics);\n          // add the layer to the map\n          this.state.map.add(this._restaurantLayer);\n          // configure the editor\n          this._editor = new Editor({\n            view,\n            container: document.createElement(\"div\"),\n            layerInfos: [{\n              layer: this._restaurantLayer,\n              fieldConfig: [{\n                name: \"name\",\n                label: \"Name\",\n                editable: true\n              }, {\n                name: \"category\",\n                label: \"Category\",\n                editable: true\n              }, {\n                name: \"rating\",\n                label: \"Rating\",\n                editable: true\n              }, {\n                name: \"review\",\n                label: \"Review\",\n                editable: true\n              }]\n            }]\n          });\n          this.configureEditor();\n      });\n    });\n  }\n\n  /**\n  * Create a list of Esri Graphics, one per restaurant\n  * @returns {array} the list of restaurant Graphics\n  */\n  createGraphics = () => {\n    const { restaurants } = this.props;\n    const { webMercatorUtils } = this.state;\n\n    return restaurants.map((restaurant) => {\n      const point = {\n        type: 'point',\n        latitude: restaurant.latitude,\n        longitude: restaurant.longitude\n      };\n\n      const geometry = webMercatorUtils.geographicToWebMercator(point);\n      return {\n        geometry,\n        attributes: {\n          name: restaurant.name,\n          rating: restaurant.stars,\n          category: restaurant.category,\n          review: restaurant.review,\n        }\n      };\n    });\n  }\n\n  /**\n  * Create a Feature Layer containing the restaurant Graphics\n  * @param {array} restaurantGraphics the list of restaurant Graphics\n  * @returns {any} the feature layer\n  */\n  createLayer = (restaurantGraphics) => {\n    const { FeatureLayer } = this.state;\n    // specify the fields that each graphic will contain\n    const fields = [\n      { name: \"ObjectID\", alias: \"ObjectID\", type: \"oid\"},\n      { name: \"name\", alias: \"Name\", type: \"string\" },\n      { name: \"rating\", alias: \"Rating\",type: \"double\" },\n      { name: \"category\", alias: \"Category\", type: \"string\" },\n      { name: \"review\", alias: \"Review\", type: \"string\"}\n    ];\n\n    const editThisAction = {\n      title: \"Edit\",\n      id: \"edit-this\",\n      className: \"esri-icon-edit\"\n    };\n\n    /* Create a popupTemplate for the featurelayer and pass in a function to\n    set its content and specify an action to handle editing the selected feature */\n    this._template = {\n      title: \"{name}\",\n      outFields: [\"*\"],\n      content: this.generateTemplateContent,\n      fieldInfos: [\n        { fieldName: \"name\" },\n        { fieldName: \"rating\" },\n        { fieldName: \"category\" },\n        { fieldName: \"review\" }\n      ],\n      actions: [editThisAction]\n    };\n\n    return new FeatureLayer({\n      source: restaurantGraphics,\n      fields,\n      popupTemplate: this._template,\n      outFields: [\"*\"],\n      objectIdField: \"ObjectID\",\n      geometryType: \"point\",\n      editingEnabled: true,\n      renderer: {\n        type: \"simple\",\n        symbol: {\n          type: 'picture-marker',\n          url: `${process.env.PUBLIC_URL}/assets/restaurant-icon.svg`,\n          width: '25px',\n          height:'25px'\n        }\n      }\n    });\n  };\n\n  /** Creates two popup elements for the template: attachments and custom text\n   * @param {any} feature the feature to create a popup for\n   * @returns {array} the popup elements\n   */\n  generateTemplateContent = (feature) => {\n    const { AttachmentsContent, CustomContent } = this.state;\n    // 1. Set how the attachments should display within the popup\n    const attachmentsElement = new AttachmentsContent({\n      displayType: \"list\"\n    });\n\n    // This custom content element contains formatted popup content\n    const customElement = new CustomContent({\n      outFields: [\"*\"],\n      creator: function (event) {\n        return (\n          `${event.graphic.attributes.rating}/5 stars\n          <ul>\n              <li>${event.graphic.attributes.category}</li>\n              <li>${event.graphic.attributes.review}</li>\n            </ul>\n        `);\n      }\n    });\n\n    return [customElement, attachmentsElement];\n  };\n\n  /**\n   * Setup listeners and action handling for the Editor widget\n   * @returns {void}\n   */\n  configureEditor = () => {\n    const { view } = this.state;\n    const _this = this;\n\n    // Event handler that fires each time an action is clicked\n    view.popup.on(\"trigger-action\", function (event) {\n      if (event.action.id === \"edit-this\") {\n        _this.editThis();\n      }\n    });\n\n    // Watch when the popup is visible\n    view.popup.watch(\"visible\", (event) => {\n      // Check the Editor's viewModel state, if it is currently open and editing existing features, disable popups\n      if (_this._editor.viewModel.state === \"editing-existing-feature\") {\n        view.popup.close();\n      } else {\n        // Grab the features of the popup\n        _this._features = view.popup.features;\n      }\n    });\n\n    // Apply edits to the restaurant layer\n    _this._restaurantLayer.on(\"apply-edits\", () => {\n      // Once edits are applied to the layer, remove the Editor from the UI\n      view.ui.remove(_this._editor);\n\n      // Iterate through the features\n      _this._features.forEach((feature) => {\n        // Reset the template for the feature if it was edited\n        feature.popupTemplate = _this._template;\n      });\n      // Cancel the workflow so that once edits are applied, a new popup can be displayed\n      _this._editor.viewModel.cancelWorkflow();\n    });\n  }\n\n  /** Execute each time the \"Edit feature\" action is clicked\n   * @returns {void}\n   */\n  editThis = () => {\n    const { view } = this.state;\n    const _this = this;\n    // If the EditorViewModel's activeWorkflow is null, make the popup not visible\n    if (!_this._editor.viewModel.activeWorkFlow) {\n      view.popup.visible = false;\n      // Call the Editor update feature edit workflow\n      _this._editor.startUpdateWorkflowAtFeatureEdit(view.popup.selectedFeature);\n      view.ui.add(_this._editor, \"top-right\");\n      view.popup.spinnerEnabled = false;\n    }\n\n    // We need to set a timeout to ensure the editor widget is fully rendered. We\n    // then grab it from the DOM stack\n    setTimeout(function () {\n      // Use the editor's back button as a way to cancel out of editing\n      let arrComp = _this._editor.domNode.getElementsByClassName(\n        \"esri-editor__back-button esri-interactive\");\n      if (arrComp.length === 1) {\n        // Add a tooltip for the back button\n        arrComp[0].setAttribute(\"title\", \"Cancel edits, return to popup\");\n        // Add a listerner to listen for when the editor's back button is clicked\n        arrComp[0].addEventListener('click', function (evt) {\n          // Prevent the default behavior for the back button and instead remove the editor and reopen the popup\n          evt.preventDefault();\n          _this._editor.viewModel.cancelWorkflow();\n          view.ui.remove(_this._editor);\n          view.popup.open({\n            features: _this._features\n          });\n        });\n      }\n    }, 150);\n  }\n\n  /**\n   * Render the Map Component\n   * @returns {HTML}\n   */\n  render() {\n    return(\n      <div className='restaurant-map-div' id='restaurantMap' />\n    );\n  }\n}\n","export const arcgisApiKey = 'AAPKac9b362f225f4f378683a4a3ac766f69hi9tHlW8g37flkaxGDNZ0mguVNfC67EVRIw4XN0aCiQsni_vQNodhgNZ7H9xVbYL'\n","import { connect } from 'react-redux';\nimport Map from './Map.jsx';\n\nexport const mapStateToProps = (state, ownProps) => {\n  return {\n    restaurants: ownProps.restaurants\n  };\n};\nexport const mapDispatchToProps = null;\n\nconst MapContainer = connect(mapStateToProps, mapDispatchToProps)(Map);\n\nexport default MapContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapContainer from './MapContainer.js';\n\n/**\n * Main Layout Component that holds the contents of the site\n */\nclass MainLayout extends React.Component {\n  static propTypes = {\n    restaurants: PropTypes.arrayOf(PropTypes.object),\n    fetchRestaurants: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    restaurants: []\n  };\n\n  /**\n   * Upon mounting, if there are no restaurants loaded, fetch them\n   * @returns {void}\n   */\n  componentDidMount() {\n    const { fetchRestaurants, restaurants} = this.props;\n    if (restaurants.length === 0) {\n      fetchRestaurants();\n    }\n  }\n\n  /**\n   * Render the main layout of the site\n   * @returns {HTML}\n   */\n  render() {\n    const { restaurants } = this.props;\n    return(\n      <div>\n        <h1> Restaurant Reviews </h1>\n        <MapContainer\n          restaurants={restaurants}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MainLayout;\n","\n/**\n * Selector to retrieve restaurants from state\n * @returns{array} list of restaurants\n */\nexport function selectRestaurants(state) {\n  return state.restaurants;\n}\n","import { connect } from 'react-redux';\nimport MainLayout from './MainLayout.jsx';\nimport { selectRestaurants } from '../store/selectors/index';\nimport { fetchRestaurants } from '../store/actions/index';\n\nexport const mapStateToProps = (state) => {\n  return {\n    restaurants: selectRestaurants(state)\n  }\n};\nexport const mapDispatchToProps = dispatch => ({\n  fetchRestaurants: () => {\n    dispatch(fetchRestaurants());\n  }\n});\n\nconst MainLayoutContainer = connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n\nexport default MainLayoutContainer;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport MainLayoutContainer from './components/MainLayoutContainer.js';\n\nconst store = configureStore();\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <MainLayoutContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}