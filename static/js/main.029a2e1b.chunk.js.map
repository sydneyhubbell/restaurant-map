{"version":3,"sources":["data/restaurants.js","store/actions/index.js","services/index.js","store/reducers/index.js","store/initialState.js","store/configureStore.js","components/Map.jsx","data/apiKeys.js","components/MapContainer.js","components/ReviewForm.jsx","components/ReviewFormContainer.js","components/MainLayout.jsx","store/selectors/index.js","components/MainLayoutContainer.js","App.jsx","index.js"],"names":["restaurants","id","name","latitude","longitude","rating","category","review","FETCHING_RESTAURANTS","FETCHING_RESTAURANTS_SUCCESS","FETCHING_RESTAURANTS_FAILURE","ADD_RESTAURANT","UPDATE_RESTAURANT","DELETE_RESTAURANT","fetchRestaurants","dispatch","type","Promise","resolve","then","payload","catch","error","reducer","state","action","actions","nextId","length","slice","initialState","logger","createLogger","composeEnhanced","window","__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__","compose","configureStore","createStore","applyMiddleware","thunkMiddleware","Map","props","setupMap","map","view","loadModules","Editor","webMercatorUtils","FeatureLayer","AttachmentsContent","CustomContent","setState","restaurantGraphics","createGraphics","_restaurantLayer","createLayer","add","_editor","container","document","createElement","layerInfos","layer","fieldConfig","label","editable","configureEditor","restaurant","point","geometry","geographicToWebMercator","attributes","_template","title","outFields","content","generateTemplateContent","fieldInfos","fieldName","className","source","fields","alias","popupTemplate","objectIdField","geometryType","editingEnabled","renderer","symbol","url","process","width","height","feature","attachmentsElement","displayType","creator","event","graphic","_this","popup","on","editThis","watch","viewModel","close","_features","features","ui","remove","forEach","cancelWorkflow","updateRestaurant","deleteRestaurant","activeWorkFlow","visible","startUpdateWorkflowAtFeatureEdit","selectedFeature","spinnerEnabled","setTimeout","backButton","domNode","getElementsByClassName","setAttribute","addEventListener","evt","preventDefault","open","updateButton","restaurantDetails","deleteButton","confirmDeleteButton","this","zoom","center","esriConfig","MapView","apiKey","basemap","when","React","Component","defaultProps","restaurantList","MapContainer","connect","ownProps","ReviewForm","addRestaurantCallback","onClick","ReviewFormContainer","addRestaurant","MainLayout","showForm","selectRestaurants","MainLayoutContainer","store","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.029a2e1b.chunk.js","sourcesContent":["export const restaurants = [\n  {\n    id: 0,\n    name: \"Trident Cafe\",\n    latitude: 42.348403813905485,\n    longitude: -71.08666597272564,\n    rating: 3.5,\n    category: \"Casual Brunch\",\n    review: \"Fun bookshop brunch place- food is good, but atmosphere is better\"\n  },\n  {\n    id: 1,\n    name: \"Posto\",\n    latitude: 42.393130393416975,\n    longitude: -71.12023817216877,\n    rating: 4.5,\n    category: \"Fancier\",\n    review: \"Great Pizza and cocktails\"\n  },\n  {\n    id: 2,\n    name: \"SRV\",\n    latitude: 42.341167652453514,\n    longitude: -71.08160220247323,\n    rating: 5,\n    category: \"Fancier\",\n    review: \"Incredible modern Italian, favorite restaurant in Boston\"\n  },\n  {\n    id: 3,\n    name: \"Life Alive Organic Cafe\",\n    latitude: 42.36710399603149,\n    longitude: -71.10370172249357,\n    rating: 5,\n    category: \"Casual\",\n    review: \"Incredible vegetarian salads & bowls. Favorite lunch spot\"\n  },\n  {\n    id: 4,\n    name: \"Similans\",\n    latitude: 42.36635440233365,\n    longitude: -71.0782126899619,\n    rating: 4.7,\n    category: \"Fancier\",\n    review: \"Great Thai food- try the green curry\"\n  },\n  {\n    id: 5,\n    name: \"Pho Basil\",\n    latitude: 42.34635787410512,\n    longitude: -71.0863610565746,\n    rating: 4.5,\n    category: \"Casual\",\n    review: \"Not fancy, but the best Pho. College Favorite\"\n  },\n  {\n    id: 6,\n    name: \"Squealing Pig\",\n    latitude: 42.335031338903555,\n    longitude: -71.10164881620743,\n    rating: 3.5,\n    category: \"Bar\",\n    review: \"Favorite college bar. Good tap list, food is ok\"\n  },\n  {\n    id: 7,\n    name: \"James Hook & Co.\",\n    latitude: 42.35497180351533,\n    longitude: -71.05060155135841,\n    rating: 4,\n    category: \"Fast Food\",\n    review: \"Tiny shack, best lobster rolls- outdoor eating but good prices\"\n  },\n  {\n    id: 8,\n    name: \"Georgetown Cupcake\",\n    latitude: 42.35207492173606,\n    longitude: -71.07419330674165,\n    rating: 4.1,\n    category: \"Bakery\",\n    review: \"Insane cupcakes- expensive but free flavor of the day if you get there early enough\"\n  },\n  {\n    id: 9,\n    name: \"Thinking Cup\",\n    latitude: 42.354339815839346,\n    longitude: -71.06323525356133,\n    rating: 4.2,\n    category: \"Coffee Shop\",\n    review: \"Good coffee and great sandwiches. Always busy inside, so get it to go and eat in The Common\"\n  },\n  {\n    id: 10,\n    name: \"Bronwyn\",\n    latitude: 42.3797974681605,\n    longitude: -71.09448165583905,\n    rating: 3.9,\n    category: \"Bar\",\n    review: \"Fun German bar/restaurant. Great Oktoberfest specials\"\n  },\n  {\n    id: 11,\n    name: \"3 Little Figs\",\n    latitude: 42.39237612095277,\n    longitude: -71.11068512298775,\n    rating: 4.8,\n    category: \"Coffee Shop\",\n    review: \"Awesome Early Grey Latte- fun pastries\"\n  },\n  {\n    id: 12,\n    name: \"Mortadella Head\",\n    latitude: 42.39725233297917,\n    longitude: -71.12187567546228,\n    rating: 3.2,\n    category: \"Pizza\",\n    review: \"Pretty good. Very thick crust, a little too much sauce\"\n  },\n  {\n    id: 13,\n    name: \"Bagelsaurus\",\n    latitude: 42.38626598967312,\n    longitude: -71.11960431243706,\n    rating: 4.4,\n    category: \"Breakfast, Bagels\",\n    review: \"Amazing bagel sandwiches\"\n  },\n  {\n    id: 14,\n    name: \"Goldilox Bagels\",\n    latitude: 42.41688156487264,\n    longitude:  -71.11845486455239,\n    rating: 4.5,\n    category: \"Breakfast, Bagels\",\n    review: \"Also amazing bagel sandwiches- gotta try the Lox Bagel\"\n  }\n];\n","import { getRestaurants } from '../../services/index.js';\n\n// Action Types\nexport const FETCHING_RESTAURANTS = 'FETCHING_RESTAURANTS';\nexport const FETCHING_RESTAURANTS_SUCCESS = 'FETCHING_RESTAURANTS_SUCCESS';\nexport const FETCHING_RESTAURANTS_FAILURE = 'FETCHING_RESTAURANTS_FAILURE';\n\nexport const ADD_RESTAURANT = 'ADD_RESTAURANT';\nexport const UPDATE_RESTAURANT = 'UPDATE_RESTAURANT';\nexport const DELETE_RESTAURANT = 'DELETE_RESTAURANT';\n\n\n// Action creators\n\n/**\n * An action to fetch the restaurants\n * @returns {Promise} The promise to fetch restaurant data\n */\nexport function fetchRestaurants() {\n  return (dispatch) => {\n    dispatch({ type: FETCHING_RESTAURANTS });\n\n    return getRestaurants()\n      .then((restaurants) => {\n        dispatch({ type: FETCHING_RESTAURANTS_SUCCESS, payload: restaurants });\n      })\n      .catch((error) => {\n        dispatch({ type: FETCHING_RESTAURANTS_FAILURE, payload: error });\n      });\n  };\n}\n\n/**\n * An action to add a new restaurant to the restaurants list\n * @param {object} restaurant the restaurant to add\n * @returns {object} The action item\n */\nexport function addRestaurant(restaurant) {\n  return {\n    type: ADD_RESTAURANT,\n    payload: restaurant\n  };\n}\n\n/**\n * An action to update an existing restaurant in the restaurants list\n * @param {object} restaurant the restaurant to update\n * @returns {object} The action item\n */\nexport function updateRestaurant(restaurant) {\n  return {\n    type: UPDATE_RESTAURANT,\n    payload: restaurant\n  };\n}\n\n/**\n * An action to delete a restaurant from the restaurants list\n * @param {number} id the id of the restaurant to delete\n * @returns {object} The action item\n */\nexport function deleteRestaurant(id) {\n  return {\n    type: DELETE_RESTAURANT,\n    payload: id\n  };\n}\n","import { restaurants } from '../data/restaurants';\n\n/**\n * Get the restaurant data\n * @returns {Promise} Promise to return the restaurants\n */\nexport function getRestaurants() {\n  // TODO TEMPORARILY RETURNS LOCAL STORED DATA UNTIL BACKEND IS SETUP\n  return Promise.resolve(restaurants);\n}\n","import * as actions from '../actions/index.js';\n\nexport default function reducer(state, action) {\n  const { payload, type } = action;\n  switch (type) {\n    case actions.FETCHING_RESTAURANTS:\n     return { ...state };\n    case actions.FETCHING_RESTAURANTS_SUCCESS:\n      return {\n        ...state,\n        restaurants: payload\n      };\n    case actions.FETCHING_RESTAURANTS_FAILURE:\n      return { ...state };\n    case actions.ADD_RESTAURANT:\n      const nextId = state.restaurants.length;\n      return {\n        ...state,\n        restaurants: [\n          ...state.restaurants,\n          {\n            id: nextId,\n            ...payload\n          }\n        ]\n      };\n    case actions.UPDATE_RESTAURANT:\n      return {\n        ...state,\n        restaurants: [\n          ...state.restaurants.slice(0, payload.id),\n          { ...payload },\n          ...state.restaurants.slice(payload.id + 1)\n        ]\n      };\n    case actions.DELETE_RESTAURANT:\n      return {\n        ...state,\n        restaurants: [\n          ...state.restaurants.slice(0, payload),\n          ...state.restaurants.slice(payload + 1)\n        ]\n      };\n     default:\n      return { ...state};\n  }\n}\n","export const initialState = {\n    restaurants: []\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './reducers';\nimport { initialState } from './initialState.js';\n\nconst logger = createLogger();\nconst composeEnhanced = window.__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__ || compose;\n\nfunction configureStore() {\n  return createStore(\n    reducer,\n    initialState,\n    composeEnhanced(applyMiddleware(thunkMiddleware, logger))\n  );\n}\n\nexport default configureStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { loadModules } from 'esri-loader';\nimport { arcgisApiKey } from '../data/apiKeys.js';\nimport './Map.css';\n\n/**\n * Map Component that displays restaurants geographically\n */\nexport default class Map extends React.Component {\n  static propTypes = {\n    zoom: PropTypes.number,\n    center: PropTypes.shape({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number\n    }),\n    restaurants: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      category: PropTypes.string,\n      rating: PropTypes.number,\n      review: PropTypes.string\n    })),\n    updateRestaurant: PropTypes.func.isRequired,\n    deleteRestaurant: PropTypes.func.isRequired\n  };\n  static defaultProps = {\n    zoom: 12,\n    center: { latitude: 42.35879, longitude: -71.05610 }, // Boston\n    restaurantList: []\n  };\n\n  /**\n   * Construct this Map component\n   * @param {any} props the Component's props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      view: null,\n      webMercatorUtils: null,\n      FeatureLayer: null,\n      AttachmentsContent: null,\n      CustomContent: null\n    }\n  }\n\n  /**\n   * Upon mounting, instantiate the Esri Arcgis Map\n   * For more documentation: https://developers.arcgis.com/javascript/latest/api-reference/\n   * @returns {void}\n   */\n  componentDidMount() {\n    const { zoom, center } = this.props;\n    loadModules(['esri/config', 'esri/Map', 'esri/views/MapView'], {})\n      .then(([esriConfig, Map, MapView]) => {\n        esriConfig.apiKey = arcgisApiKey;\n        const map = new Map({\n          basemap: 'arcgis-light-gray'\n        });\n        const view = new MapView({\n          container: 'restaurantMap',\n          map,\n          zoom,\n          center: [center.longitude, center.latitude]\n        });\n        view.when(() => {\n          this.setupMap(map, view);\n        });\n      });\n  }\n\n  /**\n   * Once the Basemap has been created, finish setting up the map by\n   * loading features and adding widgets\n   * @returns {void}\n   */\n  setupMap = (map, view) => {\n    // Load the Esri Modules once, and store them in the state for future use\n    loadModules(['esri/widgets/Editor', 'esri/geometry/support/webMercatorUtils',\n    'esri/layers/FeatureLayer', 'esri/popup/content/AttachmentsContent',\n    'esri/popup/content/CustomContent'], {})\n      .then(([Editor, webMercatorUtils, FeatureLayer, AttachmentsContent, CustomContent]) => {\n        this.setState({\n          map,\n          view,\n          webMercatorUtils,\n          FeatureLayer,\n          AttachmentsContent,\n          CustomContent\n        }, () => {\n          // create the Graphics\n          const restaurantGraphics = this.createGraphics();\n          // Add those graphics to a new Feature layer\n          this._restaurantLayer = this.createLayer(restaurantGraphics);\n          // add the layer to the map\n          this.state.map.add(this._restaurantLayer);\n          // configure the editor\n          this._editor = new Editor({\n            view,\n            container: document.createElement(\"div\"),\n            layerInfos: [{\n              layer: this._restaurantLayer,\n              fieldConfig: [\n              {\n                name: \"id\",\n                label: \"id\",\n                editable: false\n              },{\n                name: \"name\",\n                label: \"Name\",\n                editable: true\n              }, {\n                name: \"category\",\n                label: \"Category\",\n                editable: true\n              }, {\n                name: \"rating\",\n                label: \"Rating\",\n                editable: true\n              }, {\n                name: \"review\",\n                label: \"Review\",\n                editable: true\n              }]\n            }]\n          });\n          this.configureEditor();\n      });\n    });\n  }\n\n  /**\n  * Create a list of Esri Graphics, one per restaurant\n  * @returns {array} the list of restaurant Graphics\n  */\n  createGraphics = () => {\n    const { restaurants } = this.props;\n    const { webMercatorUtils } = this.state;\n\n    return restaurants.map((restaurant) => {\n      const point = {\n        type: 'point',\n        latitude: restaurant.latitude,\n        longitude: restaurant.longitude\n      };\n\n      const geometry = webMercatorUtils.geographicToWebMercator(point);\n      return {\n        geometry,\n        attributes: {\n          id: restaurant.id,\n          name: restaurant.name,\n          rating: restaurant.rating,\n          category: restaurant.category,\n          review: restaurant.review,\n        }\n      };\n    });\n  }\n\n  /**\n  * Create a Feature Layer containing the restaurant Graphics\n  * @param {array} restaurantGraphics the list of restaurant Graphics\n  * @returns {any} the feature layer\n  */\n  createLayer = (restaurantGraphics) => {\n    const { FeatureLayer } = this.state;\n    // specify the fields that each graphic will contain\n    const fields = [\n      { name: \"id\", alias: \"ID\", type: \"oid\"},\n      { name: \"name\", alias: \"Name\", type: \"string\" },\n      { name: \"rating\", alias: \"Rating\",type: \"double\" },\n      { name: \"category\", alias: \"Category\", type: \"string\" },\n      { name: \"review\", alias: \"Review\", type: \"string\"}\n    ];\n\n    const editThisAction = {\n      title: \"Edit\",\n      id: \"edit-this\",\n      className: \"esri-icon-edit\"\n    };\n\n    /* Create a popupTemplate for the featurelayer and pass in a function to\n    set its content and specify an action to handle editing the selected feature */\n    this._template = {\n      title: \"{name}\",\n      outFields: [\"*\"],\n      content: this.generateTemplateContent,\n      fieldInfos: [\n        {fieldName: \"id\" },\n        { fieldName: \"name\" },\n        { fieldName: \"rating\" },\n        { fieldName: \"category\" },\n        { fieldName: \"review\" }\n      ],\n      actions: [editThisAction]\n    };\n\n    return new FeatureLayer({\n      source: restaurantGraphics,\n      fields,\n      popupTemplate: this._template,\n      outFields: [\"*\"],\n      objectIdField: \"ObjectID\",\n      geometryType: \"point\",\n      editingEnabled: true,\n      renderer: {\n        type: \"simple\",\n        symbol: {\n          type: 'picture-marker',\n          url: `${process.env.PUBLIC_URL}/assets/restaurant-icon.svg`,\n          width: '25px',\n          height:'25px'\n        }\n      }\n    });\n  };\n\n  /** Creates two popup elements for the template: attachments and custom text\n   * @param {any} feature the feature to create a popup for\n   * @returns {array} the popup elements\n   */\n  generateTemplateContent = (feature) => {\n    const { AttachmentsContent, CustomContent } = this.state;\n    // 1. Set how the attachments should display within the popup\n    const attachmentsElement = new AttachmentsContent({\n      displayType: \"list\"\n    });\n\n    // This custom content element contains formatted popup content\n    const customElement = new CustomContent({\n      outFields: [\"*\"],\n      creator: function (event) {\n        return (\n          `${event.graphic.attributes.rating}/5 stars\n          <ul>\n              <li>${event.graphic.attributes.category}</li>\n              <li>${event.graphic.attributes.review}</li>\n            </ul>\n        `);\n      }\n    });\n\n    return [customElement, attachmentsElement];\n  };\n\n  /**\n   * Setup listeners and action handling for the Editor widget\n   * @returns {void}\n   */\n  configureEditor = () => {\n    const { view } = this.state;\n    const _this = this;\n\n    // Event handler that fires each time an action is clicked\n    view.popup.on(\"trigger-action\", (event) => {\n      if (event.action.id === \"edit-this\") {\n        _this.editThis();\n      }\n    });\n\n    // Watch when the popup is visible\n    view.popup.watch(\"visible\", (event) => {\n      // Check the Editor's viewModel state, if it is currently open and editing existing features, disable popups\n      if (_this._editor.viewModel.state === \"editing-existing-feature\") {\n        view.popup.close();\n      } else {\n        // Grab the features of the popup\n        _this._features = view.popup.features;\n      }\n    });\n\n    // TODO add delete handling to remove from store\n\n    // Apply edits to the restaurant layer\n    _this._restaurantLayer.on(\"apply-edits\", () => {\n      // Once edits are applied to the layer, remove the Editor from the UI\n      view.ui.remove(_this._editor);\n\n      // Iterate through the features\n      _this._features.forEach((feature) => {\n        // Reset the template for the feature if it was edited\n        feature.popupTemplate = _this._template;\n      });\n      // Cancel the workflow so that once edits are applied, a new popup can be displayed\n      _this._editor.viewModel.cancelWorkflow();\n    });\n  }\n\n  /** Execute each time the \"Edit feature\" action is clicked\n   * @returns {void}\n   */\n  editThis = () => {\n    const { updateRestaurant, deleteRestaurant } = this.props;\n    const { view } = this.state;\n    const _this = this;\n    // If the EditorViewModel's activeWorkflow is null, make the popup not visible\n    if (!_this._editor.viewModel.activeWorkFlow) {\n      view.popup.visible = false;\n      // Call the Editor update feature edit workflow\n      _this._editor.startUpdateWorkflowAtFeatureEdit(view.popup.selectedFeature);\n      view.ui.add(_this._editor, \"top-right\");\n      view.popup.spinnerEnabled = false;\n    }\n\n    // We need to set a timeout to ensure the editor widget is fully rendered. We\n    // then grab it from the DOM stack\n    setTimeout(() => {\n      // Use the editor's back button as a way to cancel out of editing\n      let backButton = _this._editor.domNode.getElementsByClassName(\n        \"esri-editor__back-button esri-interactive\");\n      if (backButton.length === 1) {\n        // Add a tooltip for the back button\n        backButton[0].setAttribute(\"title\", \"Cancel edits, return to popup\");\n        // Add a listerner to listen for when the editor's back button is clicked\n        backButton[0].addEventListener('click', (evt) => {\n          // Prevent the default behavior for the back button and instead remove the editor and reopen the popup\n          evt.preventDefault();\n          _this._editor.viewModel.cancelWorkflow();\n          view.ui.remove(_this._editor);\n          view.popup.open({\n            features: _this._features\n          });\n        });\n      }\n\n      // Use the Editor's Update button as a way to trigger store updates\n      let updateButton = _this._editor.domNode.getElementsByClassName(\n        \"esri-editor__control-button esri-button\");\n      if (updateButton.length > 1) {\n        updateButton[0].addEventListener('click', (event) => {\n          const restaurantDetails = _this._features[0].attributes;\n          updateRestaurant({ ...restaurantDetails });\n        });\n      }\n\n      // Use the Editor's Delete button as a way to trigger store updates\n      let deleteButton = _this._editor.domNode.getElementsByClassName(\n        \"esri-editor__control-button esri-button esri-button--tertiary\");\n      if (deleteButton.length === 1) {\n        deleteButton[0].addEventListener('click', (event) => {\n          setTimeout(() => {\n            let confirmDeleteButton = _this._editor.domNode.getElementsByClassName(\n              \"esri-editor__warning-option esri-editor__warning-option--positive\");\n            if (confirmDeleteButton.length === 1) {\n              confirmDeleteButton[0].addEventListener('click', (event) => {\n                deleteRestaurant(_this._features[0].attributes.id);\n              });\n            }\n          }, 150);\n        });\n      }\n    }, 150);\n  }\n\n  /**\n   * Render the Map Component\n   * @returns {HTML}\n   */\n  render() {\n    return(\n      <div className='restaurant-map-div' id='restaurantMap' />\n    );\n  }\n}\n","export const arcgisApiKey = 'AAPKac9b362f225f4f378683a4a3ac766f69hi9tHlW8g37flkaxGDNZ0mguVNfC67EVRIw4XN0aCiQsni_vQNodhgNZ7H9xVbYL'\n","import { connect } from 'react-redux';\nimport { updateRestaurant, deleteRestaurant } from '../store/actions/index';\nimport Map from './Map.jsx';\n\nexport const mapStateToProps = (state, ownProps) => {\n  return {\n    restaurants: ownProps.restaurants\n  };\n};\nexport const mapDispatchToProps = dispatch => ({\n  updateRestaurant: (restaurant) => {\n    dispatch(updateRestaurant(restaurant));\n  },\n  deleteRestaurant: (id) => {\n    dispatch(deleteRestaurant(id));\n  }\n});\n\nconst MapContainer = connect(mapStateToProps, mapDispatchToProps)(Map);\n\nexport default MapContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Main.css';\n\n/**\n * Review Form Component that allows user to add a restaurant review\n */\nclass ReviewForm extends React.Component {\n  static propTypes = {\n    addRestaurantCallback: PropTypes.func.isRequired,\n    addRestaurant: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n  };\n\n  /**\n   * Render the main layout of the site\n   * @returns {HTML}\n   */\n  render() {\n    const { addRestaurantCallback } = this.props;\n    return(\n      <div>\n        <p> Coming Soon </p>\n        <button\n          className=\"rm-solid-button large-margin\"\n          onClick={addRestaurantCallback}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ReviewForm;\n","import { connect } from 'react-redux';\nimport ReviewForm from './ReviewForm.jsx';\nimport { addRestaurant } from '../store/actions/index';\nimport './Main.css';\n\nexport const mapStateToProps = (state, ownProps) => {\n  return {\n    addRestaurantCallback: ownProps.addRestaurantCallback\n  };\n};\nexport const mapDispatchToProps = dispatch => ({\n  addRestaurant: (restaurant) => {\n    dispatch(addRestaurant(restaurant));\n  }\n});\n\nconst ReviewFormContainer = connect(mapStateToProps, mapDispatchToProps)(ReviewForm);\n\nexport default ReviewFormContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapContainer from './MapContainer.js';\nimport ReviewFormContainer from './ReviewFormContainer.js';\nimport './Main.css';\n\n/**\n * Main Layout Component that holds the contents of the site\n */\nclass MainLayout extends React.Component {\n  static propTypes = {\n    restaurants: PropTypes.arrayOf(PropTypes.object),\n    fetchRestaurants: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    restaurants: []\n  };\n\n  /**\n   * Upon mounting, if there are no restaurants loaded, fetch them\n   * @returns {void}\n   */\n  componentDidMount() {\n    const { fetchRestaurants, restaurants} = this.props;\n    if (restaurants.length === 0) {\n      fetchRestaurants();\n    }\n  }\n\n /**\n  * Construct this component\n  */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showForm: false\n    };\n  }\n\n  /**\n   * Render the main layout of the site\n   * @returns {HTML}\n   */\n  render() {\n    const { restaurants } = this.props;\n    const { showForm } = this.state;\n    return(\n      <div>\n        <div className=\"header\">\n          <h1 id=\"title\"> Restaurant Reviews </h1>\n          {!showForm && (\n            <div>\n              <button\n                className=\"rm-gradient-button large-margin\"\n                onClick={() => { this.setState({ showForm: true }); }}\n              >\n                Review a New Restaurant\n            </button>\n            </div>\n          )}\n          {showForm && (\n            <ReviewFormContainer\n              addRestaurantCallback={() => { this.setState({ showForm: false }); }}\n            />\n          )}\n          </div>\n        <MapContainer\n          restaurants={restaurants}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MainLayout;\n","\n/**\n * Selector to retrieve restaurants from state\n * @returns{array} list of restaurants\n */\nexport function selectRestaurants(state) {\n  return state.restaurants;\n}\n","import { connect } from 'react-redux';\nimport MainLayout from './MainLayout.jsx';\nimport { selectRestaurants } from '../store/selectors/index';\nimport { fetchRestaurants } from '../store/actions/index';\n\nexport const mapStateToProps = (state) => {\n  return {\n    restaurants: selectRestaurants(state)\n  }\n};\nexport const mapDispatchToProps = dispatch => ({\n  fetchRestaurants: () => {\n    dispatch(fetchRestaurants());\n  }\n});\n\nconst MainLayoutContainer = connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n\nexport default MainLayoutContainer;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport MainLayoutContainer from './components/MainLayoutContainer.js';\n\nconst store = configureStore();\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <MainLayoutContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}